import React from 'react';
import { render, cleanup, fireEvent } from '@testing-library/react';
import { Provider } from 'react-redux';
import { IntlProvider } from 'react-intl';
import 'jest-dom/extend-expect';

import LanguageProvider from '@/modules/language/containers/LanguageProvider';

import { configureStore } from '@/store';
import { setLocale } from '@/modules/language/actions';
import { setIntl } from '@/services/intl';

import EducationBlock from '../index';

describe('EducationBlock - Components', () => {
  let store;
  beforeAll(() => {
    store = configureStore({});
    store.dispatch(setLocale({ locale: 'en' }));
    const intlProvider = new IntlProvider({ locale: 'en', messages: {} });
    const { intl } = intlProvider.getChildContext();
    setIntl(intl);
  });
  afterEach(cleanup);

  describe('EducationBlock', () => {
    it('render', () => {
      const { getByText, getByLabelText } = render(
        <Provider store={store}>
          <LanguageProvider locale="en" lastUpdatedAt="_TMP_" messages={{}}>
            <EducationBlock data={[]} />
          </LanguageProvider>
        </Provider>,
      );
      expect(getByText('Education')).toBeInTheDocument();
      expect(
        getByText('More buddies join your circle more truth worthy you are.'),
      ).toBeInTheDocument();
      const toggleBtn = getByLabelText('edit-toggle');
      expect(toggleBtn).toBeInTheDocument();
      expect(toggleBtn).toHaveTextContent('Add');
      fireEvent.click(toggleBtn);
      expect(toggleBtn).toHaveTextContent('Cancel');
      fireEvent.click(toggleBtn);
      expect(toggleBtn).toHaveTextContent('Add');
    });
  });
});
